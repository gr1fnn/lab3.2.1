import numpy as np
from scipy.optimize import linprog
import time

# Первая задача (Минимизация)
start = time.time()

# Коэффициенты целевой функции
c1 = [1200, 1000, 1500, 1200]

# Ограничения (левая часть)
A1 = [
    [18, 26, 16, 10],
    [150, 140, 50, 80],
    [170, 230, 280, 120],
    [31, 42, 30, 20],
    [-200, -150, -170, -50]  # Для неравенства >=
]

# Правая часть ограничений
b1 = [110000, 950000, 1200000, 180000, -750000]

# Решение задачи
res1 = linprog(c1, A_ub=A1[:4], b_ub=b1[:4], A_eq=A1[4:], b_eq=b1[4:], bounds=(0, None))

print("Результат первой задачи:")
for i, var in enumerate(res1.x):
    print(f"x{i+1} =", round(var, 2))
print("Объем ресурса:", round(res1.fun, 2))
stop = time.time()
print("Время первой задачи:", stop - start)

# Вторая задача (Максимизация)
start = time.time()

# Коэффициенты целевой функции (умножаем на -1 для максимизации)
c2 = [-120, -50, -30, -100]

# Ограничения (левая часть)
A2 = [
    [18, 26, 16, 10],
    [150, 140, 50, 80],
    [170, 230, 280, 120],
    [31, 42, 30, 20],
    [-200, -150, -170, -50]
]

# Правая часть ограничений
b2 = [110000, 950000, 1200000, 180000,-750000]

# Добавление ограничения с результатом первой задачи
b2.append(-round(res1.fun, 2))  # Для неравенства >=

# Решение задачи
res2 = linprog(c2, A_ub=A2[:5], b_ub=b2[:5], bounds=(0, None))

print("Результат второй задачи:")
for i, var in enumerate(res2.x):
    print(f"t{i+1} =", round(var, 2))
print("Объем ресурса:", round(-res2.fun, 2))  # Умножаем на -1 для получения максимального значения
stop = time.time()
print("Время второй задачи:", stop - start)
